name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [closed]
    if: github.event.pull_request.merged == true

env:
  DOCKERHUB_REPO: okanumur/project1
  JAR_FILE: build/libs/*.jar

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    # 1. Kod checkout
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. JDK Kurulumu
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    # 3. JAR Oluşturma (Testler olmadan)
    - name: Build JAR with Gradle
      run: |
        chmod +x gradlew
        ./gradlew build -x test --no-daemon

    # 4. Azure'a JAR Deploy (SCP ile)
    - name: Deploy JAR to Azure VM
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.AZURE_VM_HOST }}
        username: ${{ secrets.AZURE_VM_USERNAME }}
        password: ${{ secrets.AZURE_VM_PASSWORD }}
        port: ${{ secrets.AZURE_VM_PORT || '22' }}
        source: ${{ env.JAR_FILE }}
        target: "/home/azureuser/app/"
        overwrite: true
        rm: true

    # 5. Docker Image Oluşturma
    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKERHUB_REPO }}:${{ github.sha }} .
        docker tag ${{ env.DOCKERHUB_REPO }}:${{ github.sha }} ${{ env.DOCKERHUB_REPO }}:latest

    # 6. DockerHub Login
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 7. Image'ı DockerHub'a Pushlama
    - name: Push Docker images
      run: |
        docker push ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
        docker push ${{ env.DOCKERHUB_REPO }}:latest
